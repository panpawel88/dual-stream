; DualStream Video Player Configuration File
; This file contains all configurable settings for the video player application.
; Settings are organized into sections for easy management.
; Lines starting with ';' or '#' are comments and will be ignored.


[video]
; Default switching algorithm when not specified via command line
; Options: immediate, predecoded, keyframe-sync
; - immediate: Seeks new video to current time and resumes
; - predecoded: Decodes both streams simultaneously for instant switching
; - keyframe-sync: Waits for synchronized keyframes before switching (best quality)
default_algorithm = keyframe-sync

; Default playback speed multiplier
; Supported values: 0.05, 0.1, 0.2, 0.5, 1.0, 2.0, 5.0, 10.0
default_speed = 1.0

; Fallback frame rate when video frame rate cannot be determined
; Used when demuxer fails to extract frame rate from video file
fallback_fps = 30.0

; Maximum supported video resolution
; Videos larger than this will be rejected during validation
max_resolution_width = 7680
max_resolution_height = 4320

[window]
; Default window dimensions on startup
; Will be limited by display resolution if larger
default_width = 1280
default_height = 720

; Limit window size to display resolution
; Prevents creating windows larger than the screen
limit_to_display = true

[camera]
; Default camera capture resolution
default_width = 640
default_height = 480

; Default camera capture frame rate
default_fps = 30

; Default camera pixel format
; Options: BGR8, RGB8, GRAY8, BGRA8, RGBA8, DEPTH16
default_format = BGR8

; Camera brightness adjustment
; -1 for automatic brightness, or value 0-255
brightness = -1

; Enable depth capture for cameras that support it (e.g., RealSense)
; Only affects cameras with depth sensing capabilities
enable_depth = false

[face_detection]
; Face detection algorithm to use
; Options: haar_cascade, yunet
; - haar_cascade: Classic OpenCV Haar cascades (CPU-based)
; - yunet: Modern deep learning face detection (more accurate)
algorithm = haar_cascade

; Minimum face size for detection (in pixels)
; Smaller values detect smaller faces but increase processing time
min_face_size = 30

; Maximum face size for detection (in pixels)
; Limits detection to faces smaller than this size
max_face_size = 300

; Scale factor for multi-scale detection
; Smaller values are more thorough but slower (1.05-1.3 recommended)
scale_factor = 1.1

; Minimum neighbor rectangles for each candidate detection
; Higher values reduce false positives but may miss faces
min_neighbors = 3

; Number of consistent detection frames required before switching
; Prevents rapid switching due to detection noise
stability_frames = 5

; Minimum time between switches in milliseconds
; Prevents rapid back-and-forth switching
switch_cooldown_ms = 2000

; Number of faces required to switch to Video 2
; 1 face = Video 1, >= this threshold = Video 2
multiple_face_threshold = 2

; Show face detection preview window
; Displays camera feed with detection rectangles and status
enable_preview = false

; Draw face rectangles on frames (for debugging)
; Enables visualization overlays on processed frames
enable_visualization = false

; Single face threshold for switching to Video 1
; Number of faces needed to trigger switch to first video
single_face_threshold = 1

; YuNet confidence score threshold (0.0-1.0)
; Higher values are more selective but may miss faces
score_threshold = 0.9

; Non-maximum suppression threshold (0.0-1.0)
; Controls overlap filtering for detected faces
nms_threshold = 0.3

; YuNet model input dimensions
; Larger sizes may be more accurate but slower
input_width = 320
input_height = 320

[rendering]
; Preferred rendering backend
; Options: auto, directx11, opengl
; - auto: Automatically select best available backend
; - directx11: Use DirectX 11 renderer (Windows recommended)
; - opengl: Use OpenGL 4.6 renderer (cross-platform)
preferred_backend = auto

; Target frame rate for rendering
; Actual rate may be limited by video frame rate or display refresh rate
target_fps = 60

; Render pass pipeline configuration
; Enable post-processing effects pipeline
enable_render_passes = true

; List of render passes in execution order (comma-separated)
; Available passes: passthrough, motion_blur
; Example: render_pass_chain = passthrough, motion_blur
render_pass_chain = overlay

; Global render pass settings
render_pass_pool_size = 2        ; Number of intermediate textures to allocate
render_pass_profile = false      ; Enable performance profiling per pass

[logging]
; Default logging verbosity level
; Options: debug, info, warning, error
; - debug: All messages including detailed debugging information
; - info: General information and above
; - warning: Warnings and errors only
; - error: Error messages only
default_level = info

[frame_publisher]
; Maximum number of camera frames to queue for processing
; Higher values provide more buffering but use more memory
max_frame_queue_size = 5

; Maximum number of worker threads for frame processing
; More threads allow parallel processing but use more CPU
max_worker_threads = 2

; Maximum age of frames in milliseconds before dropping
; Prevents processing of stale frames during high load
max_frame_age_ms = 100.0

; Allow dropping frames when queue is full
; Maintains real-time performance at the cost of some frame loss
enable_frame_skipping = true

; Process high-priority listeners first
; Ensures critical operations (like switching triggers) get priority
enable_priority_processing = true

; Enable detailed performance logging
; Logs frame processing times and queue statistics
enable_performance_logging = false

; Statistics reporting interval in milliseconds
; How often to log performance statistics
stats_report_interval_ms = 5000.0

; ============================================================================
; RENDER PASS CONFIGURATIONS
; Each render pass has its own section with [render_pass.NAME] format
; ============================================================================

[render_pass.passthrough]
; Simple passthrough render pass that copies input to output without modification
; Useful for testing the render pass pipeline
enabled = true
shader = Passthrough

[render_pass.motion_blur]
; Motion blur render pass that applies a simple directional blur effect
enabled = true
shader = MotionBlur

; Motion blur parameters
blur_strength = 2.0        ; Strength of the blur effect (0.0 - 10.0)
sample_count = 8           ; Number of samples for the blur (1 - 32)

[render_pass.sharpen]
; Sharpen render pass that enhances edges and details in the image
enabled = true
shader = Sharpen

; Sharpen parameters
sharpness = 0.5           ; Strength of the sharpening effect (0.0 - 2.0)
radius = 1.0              ; Size of the sharpening kernel (0.5 - 2.0)
threshold = 0.01          ; Minimum edge difference to sharpen (0.0 - 0.1)

[render_pass.bloom]
; Bloom render pass that creates a glow effect around bright areas
enabled = true
shader = Bloom

; Bloom parameters
threshold = 0.8           ; Brightness threshold for bloom effect (0.0 - 1.0)
intensity = 1.0           ; Strength of the bloom effect (0.0 - 2.0)
radius = 1.5              ; Size of the bloom glow (0.5 - 3.0)
blend_factor = 0.3        ; Blend ratio with original image (0.0 - 1.0)

[render_pass.vignette]
; Vignette render pass that darkens the edges/corners of the frame
enabled = true
shader = Vignette

; Vignette parameters
intensity = 0.5           ; Strength of the vignette darkening (0.0 - 1.0)
radius = 0.6              ; Inner radius where vignetting starts (0.0 - 1.0)
feather = 0.4             ; Softness of the vignette transition (0.1 - 0.8)
center_x = 0.0            ; Horizontal center offset (-1.0 - 1.0)
center_y = 0.0            ; Vertical center offset (-1.0 - 1.0)

[render_pass.overlay]
enabled = true
